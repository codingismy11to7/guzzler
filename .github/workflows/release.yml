name: Release
on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

permissions: {}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        uses: ./.github/actions/setup

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          version: npm run changeset-version
          title: Create Tagged Release
          commit: Create Tagged Release
          publish: npm release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish
        uses: ./.github/actions/dockerPublish
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version for tag
        if: steps.changesets.outputs.hasChangesets == 'false'
        id: version
        run: echo "VERSION=$(npx tsx scripts/printVersion.mts)" >> "$GITHUB_OUTPUT"

      - name: Tag
        if: steps.changesets.outputs.hasChangesets == 'false'
        uses: tvdias/github-tagger@v0.0.2
        with:
          repo-token: ${{ secrets.TAG_PAT }}
          tag: v${{ steps.version.outputs.VERSION }}
