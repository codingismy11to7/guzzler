diff --git a/node_modules/simple-oauth2/lib/access-token-parser.js b/node_modules/simple-oauth2/lib/access-token-parser.js
index 86ccfcb..d3b1a84 100644
--- a/node_modules/simple-oauth2/lib/access-token-parser.js
+++ b/node_modules/simple-oauth2/lib/access-token-parser.js
@@ -1,6 +1,6 @@
 'use strict';
 
-const debug = require('debug')('simple-oauth2:access-token');
+// const debug = require('debug')('simple-oauth2:access-token');
 
 const EXPIRES_AT_PROPERTY_NAME = 'expires_at';
 const EXPIRES_IN_PROPERTY_NAME = 'expires_in';
@@ -31,7 +31,7 @@ function parseToken(token) {
   } else if (EXPIRES_IN_PROPERTY_NAME in token) {
     tokenProperties[EXPIRES_AT_PROPERTY_NAME] = getExpirationDate(token[EXPIRES_IN_PROPERTY_NAME]);
   } else {
-    debug('No token expiration property was found. Ignoring date parsing');
+    // debug('No token expiration property was found. Ignoring date parsing');
   }
 
   return {
diff --git a/node_modules/simple-oauth2/lib/client/client.js b/node_modules/simple-oauth2/lib/client/client.js
index d1e8b0e..0bee32b 100644
--- a/node_modules/simple-oauth2/lib/client/client.js
+++ b/node_modules/simple-oauth2/lib/client/client.js
@@ -2,7 +2,7 @@
 
 const Hoek = require('@hapi/hoek');
 const Wreck = require('@hapi/wreck');
-const debug = require('debug')('simple-oauth2:client');
+// const debug = require('debug')('simple-oauth2:client');
 const { RequestOptions } = require('./request-options');
 
 const defaultHttpHeaders = {
@@ -33,8 +33,8 @@ module.exports = class Client {
     const requestOptions = new RequestOptions(this.#config, params);
     const options = requestOptions.toObject(opts);
 
-    debug('Creating request to: (POST) %s', url);
-    debug('Using request options: %j', options);
+    // debug('Creating request to: (POST) %s', url);
+    // debug('Using request options: %j', options);
 
     const response = await this.#client.post(url, options);
 
diff --git a/node_modules/simple-oauth2/lib/client/request-options.js b/node_modules/simple-oauth2/lib/client/request-options.js
index 64bf7eb..c8a11a1 100644
--- a/node_modules/simple-oauth2/lib/client/request-options.js
+++ b/node_modules/simple-oauth2/lib/client/request-options.js
@@ -2,7 +2,7 @@
 
 const Hoek = require('@hapi/hoek');
 const querystring = require('querystring');
-const debug = require('debug')('simple-oauth2:request-options');
+// const debug = require('debug')('simple-oauth2:request-options');
 const { CredentialsEncoding } = require('./credentials-encoding');
 
 const JSON_CONTENT_TYPE = 'application/json';
@@ -41,23 +41,23 @@ class RequestOptions {
       const encoding = new CredentialsEncoding(this.#config.options.credentialsEncodingMode);
       const credentials = encoding.getAuthorizationHeaderToken(this.#config.client.id, this.#config.client.secret);
 
-      debug('Using header authentication. Authorization header set to %s', credentials);
+      // debug('Using header authentication. Authorization header set to %s', credentials);
 
       requestOptions.headers.Authorization = `Basic ${credentials}`;
     } else {
-      debug('Using body authentication');
+      // debug('Using body authentication');
 
       parameters[this.#config.client.idParamName] = this.#config.client.id;
       parameters[this.#config.client.secretParamName] = this.#config.client.secret;
     }
 
     if (this.#config.options.bodyFormat === bodyFormatEnum.FORM) {
-      debug('Using form request format');
+      // debug('Using form request format');
 
       requestOptions.payload = querystring.stringify(parameters);
       requestOptions.headers['Content-Type'] = FORM_CONTENT_TYPE;
     } else {
-      debug('Using json request format');
+      // debug('Using json request format');
 
       requestOptions.payload = parameters;
       requestOptions.headers['Content-Type'] = JSON_CONTENT_TYPE;
